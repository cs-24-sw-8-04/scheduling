name: Rust

permissions:
  checks: write
  pull-requests: write

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite://ci.db?mode=rwc

jobs:
  build:
    strategy:
      matrix:
        project: ["backend", "protocol", "simulator"]

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ matrix.project }}

    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: "${{ matrix.project }} -> target"
        cache-all-crates: true

    - name: Install sqlx-cli
      run: cargo install sqlx-cli --no-default-features --features sqlite
      if: matrix.project != 'protocol'

    - name: Setup local db
      run: |
        cargo sqlx db create
        cargo sqlx migrate run
      if: matrix.project != 'protocol'
      working-directory: backend

    - name: Build
      run: cargo build --verbose

    - name: Run backend
      run: |
        cargo build
        cargo run&
      working-directory: backend
      if: matrix.project == 'simulator'

    - name: Run tests
      run: cargo test --verbose

    - name: Run simulator
      run: cargo run
      if: matrix.project == 'simulator'

    - uses: giraffate/clippy-action@v1
      with:
        reporter: 'github-pr-review'
        github_token: ${{ secrets.GITHUB_TOKEN }}
        clippy_flags: --all-features --all-targets -- -Dwarnings
        workdir: ./${{ matrix.project }}
        fail_on_error: true

    - name: Check formatting
      run: cargo fmt --all -- --check
